{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "app_name": {
      "defaultValue": "",
      "type": "String"
    },
    "environment_suffix": {
      "defaultValue": "",
      "type": "String"
    },
    "default_sql_admin": {
      "defaultValue": "",
      "type": "String"
    },
    "default_sql_password": {
      "defaultValue": "",
      "type": "String"
    },
    "tenant_id": {
      "defaultValue": "",
      "type": "String"
    },
    "subscription_id": {
      "defaultValue": "",
      "type": "String"
    }
  },
  "variables": {
    "var_api_name": "[concat(parameters('app_name'),'-api',if(empty(parameters('environment_suffix')),  '', concat('-',parameters('environment_suffix'))))]",
    "var_web_name": "[concat(parameters('app_name'),'-web',if(empty(parameters('environment_suffix')),  '', concat('-web-',parameters('environment_suffix'))))]",
    "var_api_asp_name": "[concat(parameters('app_name'),'-api-asp',if(empty(parameters('environment_suffix')),  '', concat('-',parameters('environment_suffix'))))]",
    "var_web_asp_name": "[concat(parameters('app_name'),'-web-asp',if(empty(parameters('environment_suffix')),  '', concat('-',parameters('environment_suffix'))))]",
    "var_sql_server_name": "[concat(parameters('app_name'),'-sqlserver',if(empty(parameters('environment_suffix')),  '', concat('-',parameters('environment_suffix'))))]",
    "var_sql_server_db_name": "[concat(parameters('app_name'),'db',if(empty(parameters('environment_suffix')),  '', concat('-',parameters('environment_suffix'))))]",
    "var_keyvault_name": "[concat(parameters('app_name'),'-keyvault',if(empty(parameters('environment_suffix')),  '', concat('-',parameters('environment_suffix'))))]",
    "var_storage_name": "[replace(replace(concat(parameters('app_name'),'blob',if(empty(parameters('environment_suffix')), parameters('environment_suffix'), '')), '-', ''),'_', '')]",
    "var_vnet_name": "[concat(parameters('app_name'),'-vnet',if(empty(parameters('environment_suffix')), '', concat('-',parameters('environment_suffix'))))]",
    "var_private_endpoint_name": "[concat(parameters('app_name'),'-prvtendpoint',if(empty(parameters('environment_suffix')), '', concat('-',parameters('environment_suffix'))))]",
    "var_nic_name": "[concat(parameters('app_name'),'-prvtendpoint-nic',if(empty(parameters('environment_suffix')), '', concat('-',parameters('environment_suffix'))))]",
    "var_vulnerability_assessment_path": "SecureString",
    "var_private_link_db_name": "privatelink.database.windows.net"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('var_keyvault_name')]",
      "location": "eastus",
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "[parameters('tenant_id')]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": false,
        "vaultUri": "[concat('https://', variables('var_keyvault_name'), '.vault.azure.net/')]",
        "provisioningState": "Succeeded",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "[variables('var_private_link_db_name')]",
      "location": "global",
      "properties": {
        "maxNumberOfRecordSets": 25000,
        "maxNumberOfVirtualNetworkLinks": 1000,
        "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
        "numberOfRecordSets": 2,
        "numberOfVirtualNetworkLinks": 1,
        "numberOfVirtualNetworkLinksWithRegistration": 0,
        "provisioningState": "Succeeded"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[variables('var_vnet_name')]",
      "location": "eastus",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "PrivateLinkSubnet",
            "properties": {
              "addressPrefix": "10.1.1.0/24",
              "serviceEndpoints": [],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "AppSvcSubnet",
            "properties": {
              "addressPrefix": "10.1.2.0/24",
              "serviceEndpoints": [],
              "delegations": [
                {
                  "name": "delegation",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverfarms"
                  }
                }
              ],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('var_sql_server_name')]",
      "location": "eastus",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[parameters('default_sql_admin')]",
        "administratorLoginPassword": "[parameters('default_sql_password')]",
        "version": "12.0",
        "restrictOutboundNetworkAccess": "Disabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('var_storage_name')]",
      "location": "eastus",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "dnsEndpointType": "Standard",
        "defaultToOAuthAuthentication": false,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "requireInfrastructureEncryption": false,
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('var_api_asp_name')]",
      "location": "East US",
      "sku": {
        "name": "B1",
        "tier": "Basic",
        "size": "B1",
        "family": "B",
        "capacity": 1
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('var_web_asp_name')]",
      "location": "East US",
      "sku": {
        "name": "F1",
        "tier": "Free",
        "size": "F1",
        "family": "F",
        "capacity": 0
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 0,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[variables('var_nic_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnet_name'), 'PrivateLinkSubnet')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "privateEndpointIpConfig.2af7caed-8380-4461-bfd6-2a39b93654ff",
            "properties": {
              "privateIPAddress": "10.1.1.4",
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnet_name'), 'PrivateLinkSubnet')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/A",
      "apiVersion": "2018-09-01",
      "name": "[concat(variables('var_private_link_db_name'), '/', variables('var_sql_server_name'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('var_private_link_db_name'))]"
      ],
      "properties": {
        "metadata": {
          "creator": "created by private endpoint sustain-private-endpoint with resource guid d3f7bd7a-8445-496e-8d2e-73f85035a131"
        },
        "ttl": 10,
        "aRecords": [
          {
            "ipv4Address": "10.1.1.4"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/SOA",
      "apiVersion": "2018-09-01",
      "name": "[concat(variables('var_private_link_db_name'), '/@')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('var_private_link_db_name'))]"
      ],
      "properties": {
        "ttl": 3600,
        "soaRecord": {
          "email": "azureprivatedns-host.microsoft.com",
          "expireTime": 2419200,
          "host": "azureprivatedns.net",
          "minimumTtl": 10,
          "refreshTime": 3600,
          "retryTime": 300,
          "serialNumber": 1
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(variables('var_vnet_name'), '/AppSvcSubnet')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('var_vnet_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.1.2.0/24",
        "serviceEndpoints": [],
        "delegations": [
          {
            "name": "delegation",
            "properties": {
              "serviceName": "Microsoft.Web/serverfarms"
            }
          }
        ],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(variables('var_vnet_name'), '/PrivateLinkSubnet')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('var_vnet_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.1.1.0/24",
        "serviceEndpoints": [],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/connectionPolicies",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(variables('var_sql_server_name'), '/default')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('var_sql_server_name'))]"
      ],
      "properties": {
        "connectionType": "Default"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(variables('var_sql_server_name'), '/',variables('var_sql_server_db_name'))]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('var_sql_server_name'))]"
      ],
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 10
      },
      "kind": "v12.0,user",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 268435456000,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false,
        "readScale": "Disabled",
        "requestedBackupStorageRedundancy": "Geo",
        "maintenanceConfigurationId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default')]",
        "isLedgerOn": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('var_storage_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('var_storage_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "changeFeed": {
          "enabled": false
        },
        "restorePolicy": {
          "enabled": false
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "allowPermanentDelete": false,
          "enabled": true,
          "days": 7
        },
        "isVersioningEnabled": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('var_storage_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('var_storage_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('var_storage_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('var_storage_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('var_web_name')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('var_web_asp_name'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('var_web_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('var_web_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('var_web_asp_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "vnetRouteAllEnabled": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 0
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "customDomainVerificationId": "F80E45E9C481A25CC85D4144860C091E8C84D11474A31680603AA30ACC89BFA0",
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('var_api_name'), '/ftp')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_api_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('var_web_name'), '/ftp')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_web_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('var_api_name'), '/scm')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_api_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('var_web_name'), '/scm')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_web_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('var_api_name'), '/web')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_api_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v6.0",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "acrUseManagedIdentityCreds": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$sustain-api",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetName": "606b9b94-8889-44f0-a104-9a06e06f1baf_AppSvcSubnet",
        "vnetRouteAllEnabled": true,
        "vnetPrivatePortsCount": 0,
        "cors": {
          "allowedOrigins": [
            "https://sustain-web.azurewebsites.net"
          ],
          "supportCredentials": true
        },
        "localMySqlEnabled": false,
        "managedServiceIdentityId": 30910,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.2",
        "ftpsState": "FtpsOnly",
        "preWarmedInstanceCount": 0,
        "functionAppScaleLimit": 0,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 0,
        "azureStorageAccounts": {}
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('var_web_name'), '/web')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_web_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v6.0",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "acrUseManagedIdentityCreds": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$sustain-web",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetRouteAllEnabled": false,
        "vnetPrivatePortsCount": 0,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.2",
        "ftpsState": "FtpsOnly",
        "preWarmedInstanceCount": 0,
        "functionAppScaleLimit": 0,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 0,
        "azureStorageAccounts": {}
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('var_api_name'), '/', variables('var_api_name'), '.azurewebsites.net')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_api_name'))]"
      ],
      "properties": {
        "siteName": "sustain-api",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('var_web_name'), '/', variables('var_web_name'), '.azurewebsites.net')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_web_name'))]"
      ],
      "properties": {
        "siteName": "sustain-web",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat(variables('var_private_link_db_name'), '/k3po6ro6lukw6')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('var_private_link_db_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('var_vnet_name'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('var_vnet_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-11-01",
      "name": "[variables('var_private_endpoint_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('var_sql_server_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnet_name'), 'PrivateLinkSubnet')]"
      ],
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('var_private_endpoint_name')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', variables('var_sql_server_name'))]",
              "groupIds": [
                "sqlServer"
              ],
              "privateLinkServiceConnectionState": {
                "status": "Approved",
                "description": "Auto-approved",
                "actionsRequired": "None"
              }
            }
          }
        ],
        "manualPrivateLinkServiceConnections": [],
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnet_name'), 'PrivateLinkSubnet')]"
        },
        "customDnsConfigs": []
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-11-01",
      "name": "[concat(variables('var_private_endpoint_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', variables('var_private_endpoint_name'))]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('var_private_link_db_name'))]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink-database-windows-net",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('var_private_link_db_name'))]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(variables('var_sql_server_name'),'/',variables('var_sql_server_db_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('var_sql_server_name'), variables('var_sql_server_db_name'))]",
        "[resourceId('Microsoft.Sql/servers', variables('var_sql_server_name'))]"
      ],
      "properties": {
        "retentionDays": 7,
        "diffBackupIntervalInHours": 24
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('var_sql_server_name'),'/',variables('var_sql_server_db_name'), '/default')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('var_sql_server_name'),variables('var_sql_server_db_name'))]",
        "[resourceId('Microsoft.Sql/servers', variables('var_sql_server_name'))]"
      ],
      "properties": {
        "state": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('var_storage_name'), '/default/challengebanners')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('var_storage_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('var_storage_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-09-01",
      "name": "[concat(variables('var_storage_name'), '/default/photos')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('var_storage_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('var_storage_name'))]"
      ],
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('var_api_name')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('var_api_asp_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnet_name'), 'AppSvcSubnet')]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('var_api_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('var_api_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('var_api_asp_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "vnetRouteAllEnabled": true,
        "siteConfig": {
          "numberOfWorkers": 1,
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 0
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "customDomainVerificationId": "F80E45E9C481A25CC85D4144860C091E8C84D11474A31680603AA30ACC89BFA0",
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnet_name'), 'AppSvcSubnet')]",
        "keyVaultReferenceIdentity": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/sites/virtualNetworkConnections",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('var_api_name'), '/606b9b94-8889-44f0-a104-9a06e06f1baf_AppSvcSubnet')]",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_api_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnet_name'), 'AppSvcSubnet')]"
      ],
      "properties": {
        "vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('var_vnet_name'), 'AppSvcSubnet')]",
        "isSwift": true
      }
    }
  ]
}
    